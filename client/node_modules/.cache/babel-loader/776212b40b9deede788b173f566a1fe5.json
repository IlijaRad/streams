{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamShow.js\";\nimport React from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n    this.buildPlayer();\n  }\n\n  componentDidUpdate() {\n    this.buildPlayer();\n  }\n\n  componentWillUnmount() {\n    this.player.destroy();\n  }\n\n  buildPlayer() {\n    if (this.player || !this.props.stream) {\n      return;\n    }\n\n    this.flvPlayer = flv.createPlayer({\n      type: 'flv',\n      url: `http://localhost:8000/live/${this.props.match.params.id}.flv`\n    });\n    this.flvPlayer.attachMediaElement(this.videoRef.current);\n    this.flvPlayer.load();\n    this.flvPlayer.play();\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: this.videoRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.props.stream.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.stream.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["D:/React/streams/client/src/components/streams/StreamShow.js"],"names":["React","flv","connect","fetchStream","StreamShow","Component","constructor","props","videoRef","createRef","componentDidMount","match","params","id","buildPlayer","componentDidUpdate","componentWillUnmount","player","destroy","stream","flvPlayer","createPlayer","type","url","attachMediaElement","current","load","play","render","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,QAAL,gBAAgBR,KAAK,CAACS,SAAN,EAAhB;AACH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAKH,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACA,SAAKC,WAAL;AACH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKD,WAAL;AACH;;AAEDE,EAAAA,oBAAoB,GAAE;AAClB,SAAKC,MAAL,CAAYC,OAAZ;AACH;;AAEDJ,EAAAA,WAAW,GAAE;AACT,QAAI,KAAKG,MAAL,IAAe,CAAC,KAAKV,KAAL,CAAWY,MAA/B,EAAsC;AAClC;AACH;;AACD,SAAKC,SAAL,GAAiBnB,GAAG,CAACoB,YAAJ,CAAiB;AAC9BC,MAAAA,IAAI,EAAE,KADwB;AAE9BC,MAAAA,GAAG,EAAG,8BAA6B,KAAKhB,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG;AAFhC,KAAjB,CAAjB;AAIA,SAAKO,SAAL,CAAeI,kBAAf,CAAkC,KAAKhB,QAAL,CAAciB,OAAhD;AACA,SAAKL,SAAL,CAAeM,IAAf;AACA,SAAKN,SAAL,CAAeO,IAAf;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAI,CAAC,KAAKrB,KAAL,CAAWY,MAAhB,EAAuB;AACnB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBACI;AAAA,8BACI;AAAO,QAAA,GAAG,EAAE,KAAKX;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAK,KAAKD,KAAL,CAAWY,MAAX,CAAkBU;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAI,KAAKtB,KAAL,CAAWY,MAAX,CAAkBW;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA3CmC;;AA8CxC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAACd,IAAAA,MAAM,EAAEa,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACtB,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACH,CAFD;;AAIA,eAAeX,OAAO,CAAC6B,eAAD,EAAkB;AAAC5B,EAAAA;AAAD,CAAlB,CAAP,CAAwCC,UAAxC,CAAf","sourcesContent":["import React from 'react';\r\nimport flv from 'flv.js';\r\nimport {connect} from 'react-redux';\r\nimport {fetchStream} from '../../actions';\r\n\r\nclass StreamShow extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.videoRef = React.createRef();\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchStream(this.props.match.params.id);\r\n        this.buildPlayer();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.buildPlayer();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.player.destroy();\r\n    }\r\n\r\n    buildPlayer(){\r\n        if (this.player || !this.props.stream){\r\n            return;\r\n        }\r\n        this.flvPlayer = flv.createPlayer({\r\n            type: 'flv',\r\n            url: `http://localhost:8000/live/${this.props.match.params.id}.flv`\r\n        })\r\n        this.flvPlayer.attachMediaElement(this.videoRef.current);\r\n        this.flvPlayer.load();\r\n        this.flvPlayer.play();\r\n    }\r\n    \r\n    render(){\r\n        if (!this.props.stream){\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <div>\r\n                <video ref={this.videoRef} />\r\n                <h3>{this.props.stream.title}</h3>\r\n                <p>{this.props.stream.description}</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {stream: state.streams[ownProps.match.params.id]};\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchStream})(StreamShow);"]},"metadata":{},"sourceType":"module"}