{"ast":null,"code":"import { FETCH_STREAM, FETCH_STREAMS, CREATE_STREAM, EDIT_STREAM, DELETE_STREAM } from '../actions/types';\n\nconst mapKeys = streamList => {\n  let b = {};\n\n  for (let i = 0; i < streamList.length; i++) {\n    b[streamList[i].id] = a[i];\n  }\n\n  return JSON.stringify(b);\n};\n\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      return { ...state,\n        ...mapKeys(action.payload)\n      };\n\n    case FETCH_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload]: action.payload\n      };\n\n    case DELETE_STREAM:\n      let {\n        [action.payload]: omit,\n        ...res\n      } = state;\n      return res;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/React/streams/client/src/reducers/streamReducer.js"],"names":["FETCH_STREAM","FETCH_STREAMS","CREATE_STREAM","EDIT_STREAM","DELETE_STREAM","mapKeys","streamList","b","i","length","id","a","JSON","stringify","state","action","type","payload","omit","res"],"mappings":"AAAA,SACIA,YADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,aALJ,QAMO,kBANP;;AAQA,MAAMC,OAAO,GAAGC,UAAU,IAAI;AAC1B,MAAIC,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA2C;AACvCD,IAAAA,CAAC,CAACD,UAAU,CAACE,CAAD,CAAV,CAAcE,EAAf,CAAD,GAAsBC,CAAC,CAACH,CAAD,CAAvB;AACH;;AACD,SAAOI,IAAI,CAACC,SAAL,CAAeN,CAAf,CAAP;AACH,CAND;;AAQA,gBAAe,CAACO,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,aAAL;AACI,aAAO,EAAC,GAAGa,KAAJ;AAAW,WAAGT,OAAO,CAACU,MAAM,CAACE,OAAR;AAArB,OAAP;;AACJ,SAAKjB,YAAL;AACI,aAAO,EAAC,GAAGc,KAAJ;AAAW,SAACC,MAAM,CAACE,OAAP,CAAeP,EAAhB,GAAqBK,MAAM,CAACE;AAAvC,OAAP;;AACJ,SAAKf,aAAL;AACI,aAAO,EAAC,GAAGY,KAAJ;AAAW,SAACC,MAAM,CAACE,OAAP,CAAeP,EAAhB,GAAqBK,MAAM,CAACE;AAAvC,OAAP;;AACJ,SAAKd,WAAL;AACI,aAAO,EAAC,GAAGW,KAAJ;AAAW,SAACC,MAAM,CAACE,OAAR,GAAkBF,MAAM,CAACE;AAApC,OAAP;;AACJ,SAAKb,aAAL;AACI,UAAI;AAAC,SAACW,MAAM,CAACE,OAAR,GAAkBC,IAAnB;AAAyB,WAAGC;AAA5B,UAAmCL,KAAvC;AACA,aAAOK,GAAP;;AACJ;AACI,aAAOL,KAAP;AAbR;AAeH,CAhBD","sourcesContent":["import {\r\n    FETCH_STREAM,\r\n    FETCH_STREAMS,\r\n    CREATE_STREAM,\r\n    EDIT_STREAM,\r\n    DELETE_STREAM\r\n} from '../actions/types';\r\n\r\nconst mapKeys = streamList => {\r\n    let b = {};\r\n    for (let i = 0; i < streamList.length; i++){\r\n        b[streamList[i].id] = a[i];\r\n    }\r\n    return JSON.stringify(b);\r\n}\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type){\r\n        case FETCH_STREAMS:\r\n            return {...state, ...mapKeys(action.payload)};\r\n        case FETCH_STREAM:\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case CREATE_STREAM:\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case EDIT_STREAM:\r\n            return {...state, [action.payload]: action.payload};\r\n        case DELETE_STREAM:\r\n            let {[action.payload]: omit, ...res} = state;\r\n            return res; \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n "]},"metadata":{},"sourceType":"module"}