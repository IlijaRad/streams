{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  constructor(props) {\n    super(props);\n    this.title = this.state.stream.title;\n    this.description = this.state.stream.description;\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit a Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StreamForm, {\n        initialValues: (this.title, description),\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["D:/React/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","componentDidMount","props","match","params","id","constructor","title","state","stream","description","render","onSubmit","mapStateToProps","ownProps","streams"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAqBC,UAArB,QAAsC,eAAtC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAwC;AACpCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AACDC,EAAAA,WAAW,CAACJ,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKK,KAAL,GAAa,KAAKC,KAAL,CAAWC,MAAX,CAAkBF,KAA/B;AACA,SAAKG,WAAL,GAAmB,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,WAArC;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJ,QAAI,CAAC,KAAKT,KAAL,CAAWO,MAAhB,EAAuB;AACnB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AACI,QAAA,aAAa,GAAE,KAAKF,KAAL,EAAYG,WAAd,CADjB;AAEI,QAAA,QAAQ,EAAE,KAAKE;AAFnB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AArBmC;;AAyBxC,MAAMC,eAAe,GAAG,CAACL,KAAD,EAAQM,QAAR,KAAqB;AACzC,SAAO;AAACL,IAAAA,MAAM,EAAED,KAAK,CAACO,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACH,CAFD;;AAIA,eAAeV,OAAO,CAACkB,eAAD,EAAkB;AAACjB,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAoDE,UAApD,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchStream, editStream} from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component{\r\n    componentDidMount(){\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.title = this.state.stream.title;\r\n        this.description = this.state.stream.description;\r\n    }\r\n    render(){\r\n        if (!this.props.stream){\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <div>\r\n                <h3>Edit a Stream</h3>\r\n                <StreamForm \r\n                    initialValues={this.title, description}\r\n                    onSubmit={this.onSubmit}/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {stream: state.streams[ownProps.match.params.id]};\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchStream, editStream})(StreamEdit);"]},"metadata":{},"sourceType":"module"}